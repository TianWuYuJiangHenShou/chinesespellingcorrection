name: "plome_ensemble"
platform:"ensemble"
max_batch_size: 16
input [
  {
    name: "TEXT"
    data_type: TYPE_STRING
    dims: [ -1 ]
  }
]
output [
  {
    name: "RAW"
    data_type: TYPE_STRING
    dims: [ -1 ]
  },
  {
     name: "CSC"
     data_type: TYPE_STRING
     dims: [ -1 ]
  }
]
ensemble_scheduling {
  step [
    {
      model_name: "plome_preprocess"
      model_version: -1
      input_map {
        key: "RAW_TEXT"
        value: "TEXT"
      }
      output_map {
        key: "INPUT_IDS"
        value: "preprocess_input_ids"
      }
      output_map {
        key: "INPUT_MASKS"
        value: "preprocess_input_masks"
      }
      output_map {
        key: "SEGMENT_IDS"
        value: "preprocess_segment_ids"
      }
      output_map {
        key: "STROKE_IDS"
        value: "preprocess_stroke_ids"
      }
    },
    {
      model_name: "plome-onnx"
      model_version: -1
      input_map {
        key: "input_ids"
        value: "preprocess_input_ids"
      }
      input_map {
        key: "input_mask"
        value: "preprocess_input_masks"
      }
      input_map {
        key: "segment_ids"
        value: "preprocess_segment_ids"
      }
      input_map {
        key: "stroke_ids"
        value: "preprocess_stroke_ids"
      }
      output_map {
        key: "gold_masks"
        value: "plome_gold_masks"
      }
      output_map {
        key: "fusion_probs"
        value: "plome_fusion_probs"
      }

    },
    {
      model_name: "plome_postprocess"
      model_version: -1
      input_map {
        key: "INPUT_SENTENCE"
        value: "preprocess_input_ids"
      }
      input_map {
        key: "CSC_MASKS"
        value: "plome_gold_masks"
      }
      input_map {
        key: "CONFUSION_PREDS"
        value: "plome_fusion_probs"
      }
      output_map {
        key: "RAW_SENTENCE"
        value: "RAW"
      }
      output_map {
        key: "CSC_SENTENCE"
        value: "CSC"
      }
    }
  ]
}
